/*
Stylus variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon_home_width;
}

The large array-like variables contain all information about a single icon
$icon_home = x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet = width height image $spritesheet_sprites;
*/
$excel_name = 'excel';
$excel_x = 0px;
$excel_y = 0px;
$excel_offset_x = 0px;
$excel_offset_y = 0px;
$excel_width = 20px;
$excel_height = 20px;
$excel_total_width = 20px;
$excel_total_height = 46px;
$excel_image = '../images/sprites/sprites.png';
$excel = 0px 0px 0px 0px 20px 20px 20px 46px '../images/sprites/sprites.png' 'excel';
$list_name = 'list';
$list_x = 0px;
$list_y = 25px;
$list_offset_x = 0px;
$list_offset_y = -25px;
$list_width = 15px;
$list_height = 21px;
$list_total_width = 20px;
$list_total_height = 46px;
$list_image = '../images/sprites/sprites.png';
$list = 0px 25px 0px -25px 15px 21px 20px 46px '../images/sprites/sprites.png' 'list';
$spritesheet_width = 20px;
$spritesheet_height = 46px;
$spritesheet_image = '../images/sprites/sprites.png';
$spritesheet_sprites = $excel $list;
$spritesheet = 20px 46px '../images/sprites/sprites.png' $spritesheet_sprites;

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  spriteWidth($icon_home)
}

.icon-email {
  sprite($icon_email)
}
*/
spriteWidth($sprite) {
  width: $sprite[4];
}

spriteHeight($sprite) {
  height: $sprite[5];
}

spritePosition($sprite) {
  background-position: $sprite[2] $sprite[3];
}

spriteImage($sprite) {
  background-image: url($sprite[8]);
}

sprite($sprite) {
  spriteImage($sprite)
  spritePosition($sprite)
  spriteWidth($sprite)
  spriteHeight($sprite)
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of Stylus

This must be run when you have at least 2 sprites.
  If run with a single sprite, then there will be reference errors.

sprites($spritesheet_sprites);
*/
sprites($sprites) {
  for $sprite in $sprites {
    $sprite_name = $sprite[9];
    .{$sprite_name} {
      sprite($sprite);
    }
  }
}
